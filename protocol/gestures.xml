<protocol name="gestures">

  <interface name="_wl_gestures" version="1">
    <description summary="touchpad gestures">
      A global interface to provide semantic touchpad gestures for a given
      seat.

      Two gestures are currently supported: swipe and zoom/rotate.
      All gestures follow a three-stage cycle: begin, update, end and
      are identified by a unique id.

      Warning! The protocol described in this file is experimental. Each
      version of this protocol should be considered incompatible with any
      other version, and a client binding to a version different to the one
      advertised will be terminated. Once the protocol is declared stable,
      compatibility is guaranteed, the '_' prefix will be removed from the
      name and the version will be reset to 1.
    </description>

    <request name="get_swipe">
      <description summary="get swipe gesture">
	Create a swipe gesture object for the given seat. See the
	wl_gesture_swipe interface for details.
      </description>
      <arg name="id" type="new_id" interface="_wl_gesture_swipe"/>
      <arg name="id" type="object" interface="wl_seat"/>
    </request>

    <request name="get_pinch">
      <description summary="get pinch gesture">
	Create a pinch gesture object for the given seat. See the
	wl_gesture_pinch interface for details.
      </description>
      <arg name="id" type="new_id" interface="_wl_gesture_pinch"/>
      <arg name="id" type="object" interface="wl_seat"/>
    </request>
  </interface>

  <interface name="_wl_gesture_swipe" version="1">
    <description summary="a swipe gesture object">
      A swipe gesture object notifies a client about a multi-finger swipe
      gesture detected on an indirect input device such as a touchpad.
      The gesture is usually initiated by multiple fingers moving in the
      same direction but once initiated the direction may change.
      The precise conditions of when such a gesture is detected are
      implementation-dependent.

      A gesture consists of three stages: begin, update (optional) and end.
      On begin, a unique id is assigned to this gesture, further events
      relating to this gesture carry that id.

      A gesture may be cancelled by the compositor or the hardware.
      Destructive actions should not be considered until the end of a
      gesture has been received.
    </description>

    <request name="release">
      <description summary="release the swipe gesture object"/>
    </request>

    <event name="begin">
      <description summary="multi-finger swipe begin">
	This event is sent when a multi-finger swipe gesture is detected
	on the device.

	The gesture is assigned a unique @id. Future events from this
	gesture reference this ID. The ID ceases to be valid after a
	swipe_end and may be re-used in the future.
      </description>
      <arg name="serial" type="uint"/>
      <arg name="time" type="uint" summary="timestamp with millisecond granularity"/>
      <arg name="surface" type="object" interface="wl_surface"/>
      <arg name="id" type="int" summary="the unique ID of this gesture"/>
      <arg name="fingers" type="uint" summary="number of fingers"/>
    </event>

    <event name="update">
      <description summary="multi-finger swipe motion">
	This event is sent when a multi-finger swipe gesture changes the
	position of the logical center.

	The dx and dy coordinates are relative coordinates of the logical
	center of the gesture compared to the previous event.
      </description>
      <arg name="time" type="uint" summary="timestamp with millisecond granularity"/>
      <arg name="id" type="int" summary="the unique ID of this gesture"/>
      <arg name="dx" type="fixed" summary="delta x coordinate in surface coordinate space"/>
      <arg name="dy" type="fixed" summary="delta y coordinate in surface coordinate space"/>
    </event>

    <event name="end">
      <description summary="multi-finger swipe end">
	This event is sent when a multi-finger swipe gesture ceases to
	be valid. This may happen when one or more finger is lifted or
	the gesture is cancelled.

	When a gesture is cancelled, the client should undo state changes
	caused by this gesture. What causes a gesture to be cancelled is
	implementation-dependent.
      </description>
      <arg name="serial" type="uint"/>
      <arg name="time" type="uint" summary="timestamp with millisecond granularity"/>
      <arg name="id" type="int" summary="the unique ID of this gesture"/>
      <arg name="cancelled" type="int" summary="number of fingers"/>
    </event>
  </interface>

  <interface name="_wl_gesture_pinch" version="1">
    <description summary="a pinch gesture object">
      A swipe gesture object notifies a client about a multi-finger pinch
      gesture detected on an indirect input device such as a touchpad.
      The gesture is usually initiated by multiple fingers moving towards
      each other or away from each other, or by two or more fingers rotating
      around a logical center of gravity.  The precise conditions of when
      such a gesture is detected are implementation-dependent.

      A gesture consists of three stages: begin, update (optional) and end.
      On begin, a unique id is assigned to this gesture, further events
      relating to this gesture carry that id.

      A gesture may be cancelled by the compositor or the hardware.
      Destructive actions should not be considered until the end of a
      gesture has been received.
    </description>

    <request name="release">
      <description summary="release the pinch gesture object"/>
    </request>

    <event name="begin">
      <description summary="multi-finger pinch begin">
	This event is sent when a multi-finger pinch gesture is detected
	on the device.

	The gesture is assigned a unique @id. Future events from this
	gesture reference this ID. The ID ceases to be valid after a
	swipe_end and may be re-used in the future.
      </description>
      <arg name="serial" type="uint"/>
      <arg name="time" type="uint" summary="timestamp with millisecond granularity"/>
      <arg name="surface" type="object" interface="wl_surface"/>
      <arg name="id" type="int" summary="the unique ID of this gesture"/>
      <arg name="fingers" type="uint" summary="number of fingers"/>
    </event>

    <event name="update">
      <description summary="multi-finger pinch motion">
	This event is sent when a multi-finger pinch gesture changes the
	position of the logical center, the rotation or the relative scale.

	The dx and dy coordinates are relative coordinates in the
	surface coordinate space of the logical center of the gesture.

	The scale factor is an absolute scale compared to the
	pinch_begin event, i.e. a scale of 2 means the fingers are now twice
	as far apart as on pinch_begin.

	The rotation is the relative angle in degrees clockwise compared to the previous
	pinch_begin or pinch_update event.
      </description>
      <arg name="time" type="uint" summary="timestamp with millisecond granularity"/>
      <arg name="id" type="int" summary="the unique ID of this gesture"/>
      <arg name="dx" type="fixed" summary="delta x coordinate in surface coordinate space"/>
      <arg name="dy" type="fixed" summary="delta y coordinate in surface coordinate space"/>
      <arg name="scale" type="fixed" summary="scale relative to the initial finger position"/>
      <arg name="rotation" type="fixed" summary="angle in degrees cw relative to the previous event"/>
    </event>

    <event name="end">
      <description summary="multi-finger pinch end">
	This event is sent when a multi-finger pinch gesture ceases to
	be valid. This may happen when one or more finger is lifted or
	the gesture is cancelled.

	When a gesture is cancelled, the client should undo state changes
	caused by this gesture. What causes a gesture to be cancelled is
	implementation-dependent.
      </description>
      <arg name="serial" type="uint"/>
      <arg name="time" type="uint" summary="timestamp with millisecond granularity"/>
      <arg name="id" type="int" summary="the unique ID of this gesture"/>
      <arg name="cancelled" type="int" summary="number of fingers"/>
    </event>

  </interface>
</protocol>
